@using System.Collections.Generic
@{    
    IEnumerable<SelectListItem> selectList = (IEnumerable<SelectListItem>) ViewData["selectList"] ?? new SelectListItem[] { };
    bool isMultiple = ViewData["multiple"] as bool? ?? false;
    string multiple = isMultiple?"multiple":"";
    int numShown = ViewData["numShown"] as int? ?? 3;
    bool editable = ViewData["editable"] as bool? ?? true;
}

    <select class="selectpicker show-tick form-control" @multiple data-selected-text-format="count>@numShown" data-show-content="false" data-multiple-separator=" | " id="@ViewData.ModelMetadata.PropertyName" name="@ViewData.ModelMetadata.PropertyName">

        @if(selectList.Where(s => s.Group!=null).Count()>0)
        {

            //foreach (var group in selectList.Select(s => s.Group).OfType<SelectListGroup>().Distinct())
            foreach (var group in selectList.Where(s => s.Group!=null).GroupBy(s => s.Group.Name))
            {
                <optgroup label="@group.First().Group.Name" disabled="@group.First().Group.Disabled">
                    @*@foreach (SelectListItem option in selectList.Where(s => s.Group == null))*@
                    @foreach(var option in group)
                    {
                        <option disabled="@option.Disabled" @(option.Selected || option.Value==Model?"selected":"") @(option.Value!=null?"value ="+@option.Value:"")>@option.Text</option>
                    }
                </optgroup>
            }
        }
        @foreach (SelectListItem option in selectList.Where(s => s.Group == null))
        {
            var isChecked = false;
            if (Model is string) {
                isChecked = Model == option.Value;
            }
            else if(Model is ICollection<string>)
            {
                isChecked = (Model as ICollection<string>).Contains(option.Value);
            }
            <option disabled="@option.Disabled" @(option.Selected || isChecked ? "selected" : "") @(option.Value!=null?"value ="+@option.Value:"")>@option.Text</option>
        }
        @if (editable)
        {
        <option data-divider="true"></option>
        <option style="background-color: #fff" class="additem"
                data-content="<input type=text onKeyDown='event.stopPropagation();'.
    onKeyPress='addSelectInpKeyPress(this,event)' onClick='event.stopPropagation()' placeholder='Add item'>
    <span class='glyphicon glyphicon-plus addnewicon' onClick='addSelectItem(this,event,1);'></span>"></option>
        }
    </select>